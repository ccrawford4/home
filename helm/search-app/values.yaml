application-template:
  name: search-app
  namespace: search-app
  clusterSecretStoreName: cluster-secret-store
  serviceAccount:
    create: true
    name: search-app

  configMaps:
    - name: search-app-config
      data:
        API_ENDPOINT: "http://search-app-backend.search-app.svc.cluster.local:8080"
        MYSQL_HOST: "search-app-mysql.search-app.svc.cluster.local"
        MYSQL_DATABASE: "searchapp"

  deployments:
    - name: search-app-frontend
      image:
        repository: ccrawford4/search-app-frontend
        pullPolicy: IfNotPresent
        tag: "latest"
        port: 3000
      service:
        enabled: true
      container:
        envFrom:
          - configMapRef:
              name: search-app-config
    - name: search-app-backend
      image:
        repository: ccrawford4/searchapi
        pullPolicy: IfNotPresent
        tag: "arm64-v1.0.0"
        port: 8080
      service:
        enabled: true
      container:
        envFrom:
          - configMapRef:
              name: search-app-config
        env:
          - name: MYSQL_USERNAME
            valueFrom:
              secretKeyRef:
                name: search-app-secrets
                key: db-username
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: search-app-secrets
                key: db-password

  secrets:
    - name: search-app-secrets
      targetName: search-app-secrets
      data:
        - secretKey: db-username
          remoteRefKey: search-app-db-username
        - secretKey: db-password
          remoteRefKey: search-app-db-password

mysql:
  name: search-app-mysql
  namespace: search-app
  clusterSecretStoreName: cluster-secret-store
  image:
    repository: mysql
    tag: "8.0"
    pullPolicy: IfNotPresent
  database_name: searchapp
  service:
    type: ClusterIP
    port: 3306
  persistence:
    enabled: true
    storageClass: ""
    accessMode: ReadWriteOnce
    size: 20Gi
  secrets:
    useExternalSecrets: true
    externalSecrets:
      rootPasswordKey: search-app-db-root-password
      userPasswordKey: search-app-db-password
      usernameKey: search-app-db-username
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 512Mi

# Example Redis configuration (commented out - uncomment to use)
# redis:
#   name: search-app-redis
#   namespace: search-app
#   clusterSecretStoreName: cluster-secret-store
#   image:
#     repository: redis
#     tag: "7.0"
#     pullPolicy: IfNotPresent
#   service:
#     type: ClusterIP
#     port: 6379
#   persistence:
#     enabled: true
#     storageClass: ""
#     accessMode: ReadWriteOnce
#     size: 8Gi
#   secrets:
#     useExternalSecrets: true
#     externalSecrets:
#       passwordKey: search-app-redis-password
#   resources:
#     limits:
#       cpu: 500m
#       memory: 512Mi
#     requests:
#       cpu: 250m
#       memory: 256Mi
