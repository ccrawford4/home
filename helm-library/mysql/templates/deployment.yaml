apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
      - name: mysql
        image: "{{ .Values.image_name | default .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.name }}-secrets
              key: MYSQL_ROOT_PASSWORD
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.name }}-secrets
              key: MYSQL_USER
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.name }}-secrets
              key: MYSQL_PASSWORD
        {{- $database := .Values.database_name | default .Values.mysql.database }}
        {{- if $database }}
        - name: MYSQL_DATABASE
          value: {{ $database | quote }}
        {{- end }}
        ports:
        - containerPort: 3306
          name: mysql
          protocol: TCP
        {{- if .Values.persistence.enabled }}
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      {{- if .Values.persistence.enabled }}
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: {{ .Values.name }}-pvc
      {{- end }}
